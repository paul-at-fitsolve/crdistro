<?php
define('CR_PLUS_INVITATION', 'Choose your address');

/**
 * Implements hook_menu().
 */
function cr_plus_menu() {
  $items['cr_plus'] = array(
    'page callback' => 'cr_plus_proxy',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Makes a proxy request to the PLUS server.
 */
function cr_plus_proxy() {
  if (in_array(APPLICATION_ENV, array('production', 'cam-production'))) {
    $url = 'http://plus.comicrelief.com/';
  }
  else {
    $url = 'http://dev-plus.comicrelief.com/';
  }

  $data = array(
    'postcode' => isset($_GET['postcode']) ? $_GET['postcode'] : '',
    'apikey' => '1F473DF274283AB22D62B052F77A3BBC3',
    'format' => 'json',
    'orgtype' => 2,
  );

  $result = drupal_http_request(url($url, array('query' => $data)));
  print $result->data;
  drupal_exit();
}

/**
 * Implements hook_element_info().
 */
function cr_plus_element_info() {
  $type['cr_plus'] = array(
    '#input' => TRUE,
    '#required' => FALSE,
    '#process' => array('cr_plus_element_process'),
    '#element_validate' => array('cr_plus_element_validate'),
    '#theme_wrappers' => array('form_element'),
  );

  return $type;
}

/**
 * Implements hook_theme()
 */
function cr_plus_theme() {
  return array(
    'cr_plus_address' => array(
      'render element' => 'form',
      'template' => 'cr-plus-address',
    ),
  );
}

/**
 * Process callback for the Plus element.
 */
function cr_plus_element_process($element, $form_state = array(), $complete_form = array()) {
  $element['#attached']['js'][] = drupal_get_path('module', 'cr_plus') . '/cr_plus.js';
  $element['#attached']['js'][] = array(
    'data' => array('cr_plus_url' => url('cr_plus', array('absolute' => TRUE))),
    'type' => 'setting',
  );

  $element['postcode'] = array(
    '#type' => 'textfield',
    '#title' => 'Postcode',
    '#maxlength' => 15,
    '#prefix' => '<div class="cr-plus-postcode">',
  );

  $element['postcode_lookup'] = array(
    '#type' => 'button',
    '#value' => 'Find my address',
    '#attributes' => array('class' => array('cr-plus-lookup', 'blue')),
    '#prefix' => '<div class="cr-plus-lookup-wrapper">',
    '#suffix' => '</div></div>',
  );
  
  $element['address_select'] = array(
    '#type' => 'select',
    '#title' => 'Select your address',
    '#options' => array('' => CR_PLUS_INVITATION),
    // Avoid "An illegal choice has been detected", as we do not actually
    // need the return value from this field.
    '#value' => NULL,
  );

  $element['postcode_manual'] = array(
    '#type' => 'markup',
    '#prefix' => '<p class="cr-plus-manual-wrapper">',
    '#markup' => '<a class="cr-plus-manual" href="#">Alternatively, you can enter your address manually.</a>',
    '#suffix' => '</p>',
  );


  $element['address'] = array(
    '#type' => 'container',
    '#attributes' => array('class' => array('cr-plus-address-fields')),
    '#theme' => 'cr_plus_address',
  );
  $element['address']['address1'] = array(
    '#type' => 'textfield',
    '#title' => 'Address line 1',
    '#maxlength' => 100,
  );
  $element['address']['address2'] = array(
    '#type' => 'textfield',
    '#title' => 'Address line 2',
    '#maxlength' => 100,
  );
  $element['address']['address3'] = array(
    '#type' => 'textfield',
    '#title' => 'Address line 3',
    '#maxlength' => 100,
  );
  $element['address']['town'] = array(
    '#type' => 'textfield',
    '#title' => 'Town/City',
    '#maxlength' => 50,
  );
  $element['address']['country'] = array(
    '#type' => 'select',
    '#title' => 'Country',
    '#options' => cr_plus_countries(),
    '#default_value' => 'GB',
  );

  // Required fields are handled here, not in Drupal core, as we need
  // custom validation messages.
  if ($element['#required']) {
    $element['#address_required'] = TRUE;
    $element['postcode']['#title'] .= ' ' . theme('form_required_marker');
    $element['address']['address1']['#title'] .= ' ' . theme('form_required_marker');
    $element['address']['town']['#title'] .= ' ' . theme('form_required_marker');
    $element['address']['country']['#title'] .= ' ' . theme('form_required_marker');
  }

  $element['#required'] = FALSE;

  return $element;
}

/**
 * Validation callback for the Plus element.
 */
function cr_plus_element_validate($element, &$element_state) {
  if (!empty($element['#address_required'])) {
    if (empty($element['postcode']['#value'])) {
      form_error($element['postcode'], t('Please fill in your postcode'));
    }

    if (empty($element['address']['address1']['#value'])) {
      form_error($element['address']['address1'], t('Please fill in your address'));
    }

    if (empty($element['address']['town']['#value'])) {
      form_error($element['address']['town'], t('Please fill in your town/city'));
    }
  }

  return $element;
}

/**
 * Returns a map of country codes to country names.
 */
function cr_plus_countries() {
  return array(
    'AF' => 'Afghanistan',
    'AL' => 'Albania',
    'DZ' => 'Algeria',
    'AS' => 'American Samoa',
    'AD' => 'Andorra',
    'AO' => 'Angola',
    'AI' => 'Anguilla',
    'AQ' => 'Antarctica',
    'AG' => 'Antigua and Barbuda',
    'AR' => 'Argentina',
    'AM' => 'Armenia',
    'AW' => 'Aruba',
    'AU' => 'Australia',
    'AT' => 'Austria',
    'AZ' => 'Azerbaijan',
    'BS' => 'Bahamas',
    'BH' => 'Bahrain',
    'BD' => 'Bangladesh',
    'BB' => 'Barbados',
    'BY' => 'Belarus',
    'BE' => 'Belgium',
    'BZ' => 'Belize',
    'BJ' => 'Benin',
    'BM' => 'Bermuda',
    'BT' => 'Bhutan',
    'BO' => 'Bolivia',
    'BA' => 'Bosnia and Herzegovina',
    'BW' => 'Botswana',
    'BV' => 'Bouvet Island',
    'BR' => 'Brazil',
    'IO' => 'British Indian Ocean Territory',
    'BN' => 'Brunei Darussalam',
    'BG' => 'Bulgaria',
    'BF' => 'Burkina Faso',
    'BI' => 'Burundi',
    'KH' => 'Cambodia',
    'CM' => 'Cameroon',
    'CA' => 'Canada',
    'CV' => 'Cape Verde',
    'KY' => 'Cayman Islands',
    'CF' => 'Central African Republic',
    'TD' => 'Chad',
    'CL' => 'Chile',
    'CN' => 'China',
    'CX' => 'Christmas Island',
    'CC' => 'Cocos (Keeling) Islands',
    'CO' => 'Colombia',
    'KM' => 'Comoros',
    'CG' => 'Congo',
    'CD' => 'Congo, the Democratic Republic of the',
    'CK' => 'Cook Islands',
    'CR' => 'Costa Rica',
    'CI' => 'Cote D\'Ivoire',
    'HR' => 'Croatia',
    'CU' => 'Cuba',
    'CY' => 'Cyprus',
    'CZ' => 'Czech Republic',
    'DK' => 'Denmark',
    'DJ' => 'Djibouti',
    'DM' => 'Dominica',
    'DO' => 'Dominican Republic',
    'EC' => 'Ecuador',
    'EG' => 'Egypt',
    'SV' => 'El Salvador',
    'GQ' => 'Equatorial Guinea',
    'ER' => 'Eritrea',
    'EE' => 'Estonia',
    'ET' => 'Ethiopia',
    'FK' => 'Falkland Islands (Malvinas)',
    'FO' => 'Faroe Islands',
    'FJ' => 'Fiji',
    'FI' => 'Finland',
    'FR' => 'France',
    'GF' => 'French Guiana',
    'PF' => 'French Polynesia',
    'TF' => 'French Southern Territories',
    'GA' => 'Gabon',
    'GM' => 'Gambia',
    'GE' => 'Georgia',
    'DE' => 'Germany',
    'GH' => 'Ghana',
    'GI' => 'Gibraltar',
    'GR' => 'Greece',
    'GL' => 'Greenland',
    'GD' => 'Grenada',
    'GP' => 'Guadeloupe',
    'GU' => 'Guam',
    'GT' => 'Guatemala',
    'GN' => 'Guinea',
    'GW' => 'Guinea-Bissau',
    'GY' => 'Guyana',
    'HT' => 'Haiti',
    'HM' => 'Heard Island and Mcdonald Islands',
    'VA' => 'Holy See (Vatican City State)',
    'HN' => 'Honduras',
    'HK' => 'Hong Kong',
    'HU' => 'Hungary',
    'IS' => 'Iceland',
    'IN' => 'India',
    'ID' => 'Indonesia',
    'IR' => 'Iran, Islamic Republic of',
    'IQ' => 'Iraq',
    'IE' => 'Ireland',
    'IL' => 'Israel',
    'IT' => 'Italy',
    'JM' => 'Jamaica',
    'JP' => 'Japan',
    'JO' => 'Jordan',
    'KZ' => 'Kazakhstan',
    'KE' => 'Kenya',
    'KI' => 'Kiribati',
    'KP' => 'Korea, Democratic People\'s Republic of',
    'KR' => 'Korea, Republic of',
    'KW' => 'Kuwait',
    'KG' => 'Kyrgyzstan',
    'LA' => 'Lao People\'s Democratic Republic',
    'LV' => 'Latvia',
    'LB' => 'Lebanon',
    'LS' => 'Lesotho',
    'LR' => 'Liberia',
    'LY' => 'Libyan Arab Jamahiriya',
    'LI' => 'Liechtenstein',
    'LT' => 'Lithuania',
    'LU' => 'Luxembourg',
    'MO' => 'Macao',
    'MK' => 'Macedonia, the Former Yugoslav Republic of',
    'MG' => 'Madagascar',
    'MW' => 'Malawi',
    'MY' => 'Malaysia',
    'MV' => 'Maldives',
    'ML' => 'Mali',
    'MT' => 'Malta',
    'MH' => 'Marshall Islands',
    'MQ' => 'Martinique',
    'MR' => 'Mauritania',
    'MU' => 'Mauritius',
    'YT' => 'Mayotte',
    'MX' => 'Mexico',
    'FM' => 'Micronesia, Federated States of',
    'MD' => 'Moldova, Republic of',
    'MC' => 'Monaco',
    'MN' => 'Mongolia',
    'MS' => 'Montserrat',
    'MA' => 'Morocco',
    'MZ' => 'Mozambique',
    'MM' => 'Myanmar',
    'NA' => 'Namibia',
    'NR' => 'Nauru',
    'NP' => 'Nepal',
    'NL' => 'Netherlands',
    'AN' => 'Netherlands Antilles',
    'NC' => 'New Caledonia',
    'NZ' => 'New Zealand',
    'NI' => 'Nicaragua',
    'NE' => 'Niger',
    'NG' => 'Nigeria',
    'NU' => 'Niue',
    'NF' => 'Norfolk Island',
    'MP' => 'Northern Mariana Islands',
    'NO' => 'Norway',
    'OM' => 'Oman',
    'PK' => 'Pakistan',
    'PW' => 'Palau',
    'PS' => 'Palestinian Territory, Occupied',
    'PA' => 'Panama',
    'PG' => 'Papua New Guinea',
    'PY' => 'Paraguay',
    'PE' => 'Peru',
    'PH' => 'Philippines',
    'PN' => 'Pitcairn',
    'PL' => 'Poland',
    'PT' => 'Portugal',
    'PR' => 'Puerto Rico',
    'QA' => 'Qatar',
    'RE' => 'Reunion',
    'RO' => 'Romania',
    'RU' => 'Russian Federation',
    'RW' => 'Rwanda',
    'SH' => 'Saint Helena',
    'KN' => 'Saint Kitts and Nevis',
    'LC' => 'Saint Lucia',
    'PM' => 'Saint Pierre and Miquelon',
    'VC' => 'Saint Vincent and the Grenadines',
    'WS' => 'Samoa',
    'SM' => 'San Marino',
    'ST' => 'Sao Tome and Principe',
    'SA' => 'Saudi Arabia',
    'SN' => 'Senegal',
    'CS' => 'Serbia and Montenegro',
    'SC' => 'Seychelles',
    'SL' => 'Sierra Leone',
    'SG' => 'Singapore',
    'SK' => 'Slovakia',
    'SI' => 'Slovenia',
    'SB' => 'Solomon Islands',
    'SO' => 'Somalia',
    'ZA' => 'South Africa',
    'GS' => 'South Georgia and the South Sandwich Islands',
    'ES' => 'Spain',
    'LK' => 'Sri Lanka',
    'SD' => 'Sudan',
    'SR' => 'Suriname',
    'SJ' => 'Svalbard and Jan Mayen',
    'SZ' => 'Swaziland',
    'SE' => 'Sweden',
    'CH' => 'Switzerland',
    'SY' => 'Syrian Arab Republic',
    'TW' => 'Taiwan',
    'TJ' => 'Tajikistan',
    'TZ' => 'Tanzania, United Republic of',
    'TH' => 'Thailand',
    'TL' => 'Timor-Leste',
    'TG' => 'Togo',
    'TK' => 'Tokelau',
    'TO' => 'Tonga',
    'TT' => 'Trinidad and Tobago',
    'TN' => 'Tunisia',
    'TR' => 'Turkey',
    'TM' => 'Turkmenistan',
    'TC' => 'Turks and Caicos Islands',
    'TV' => 'Tuvalu',
    'UG' => 'Uganda',
    'UA' => 'Ukraine',
    'AE' => 'United Arab Emirates',
    'GB' => 'United Kingdom',
    'US' => 'United States',
    'UM' => 'United States Minor Outlying Islands',
    'UY' => 'Uruguay',
    'UZ' => 'Uzbekistan',
    'VU' => 'Vanuatu',
    'VE' => 'Venezuela',
    'VN' => 'Viet Nam',
    'VG' => 'Virgin Islands, British',
    'VI' => 'Virgin Islands, U.s.',
    'WF' => 'Wallis and Futuna',
    'EH' => 'Western Sahara',
    'YE' => 'Yemen',
    'ZM' => 'Zambia',
    'ZW' => 'Zimbabwe');
}
